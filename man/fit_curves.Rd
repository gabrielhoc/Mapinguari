% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/fit_curves.R
\name{fit_curves}
\alias{fit_curves}
\title{Creates functions relating environment to physiology.}
\usage{
fit_curves(formula, data, fitFUN, args_list = NULL, separator = "_")
}
\arguments{
\item{formula}{formula. Model formula.}

\item{data}{data frame. Table containing variables in model formula.}

\item{fitFUN}{call. Algorithm used for model.}

\item{args_list}{named list. list of arguments to be passed to the function in fitFUN.}

\item{separator}{character. Character that separates variable names, years and scenarios.}
}
\value{
Returns a tibble containing model specifications, statistics and a predictor function.
}
\description{
\code{fit_curves} Creates functions relating environment to physiology. You can run multiple models if you input their arguments as lists.
}
\examples{
perf_functions <-
  fit_curves(formula = list(tpc_size = performance ~ s(temp, bs = 'cs') + size,
    tpc_no_size = performance ~ s(temp, bs = 'cs')),
    data = FulanusPhysiology,
    fitFUN = mgcv::gamm,
    args_list = list(random = list(id = ~ 1))
  )

perf_functions2 <-
  fit_curves(formula = list(tpc_size = performance ~ s(temp, bs = 'cs') + size,
    tpc_no_size = performance ~ s(temp, bs = 'cs')),
    data = FulanusPhysiology,
    fitFUN = gamm,
    args_list = list(random = list(id = ~ 1),
      correlation = nlme::corAR1(form = ~ 1 | id))
  )

formula_list <-
  list(
    performance ~ s(temp, bs = 'cs'),
    performance ~ s(temp, bs = 'cs') + size,
    performance ~ s(temp, bs = 'cs') + hydration,
    performance ~ s(temp, bs = 'cs') + hydration + size
  )

perf_functions <-
  fit_curves(formula = formula_list,
    data = FulanusPhysiology,
    fitFUN = mgcv::gamm,
    args_list = list(random = list(id = ~ 1))
  )

# allow multiple arguments

correlation_list <- list(correlation = nlme::corAR1(form = ~ 1 | id),
  correlation = nlme::corAR1(0.1, form = ~ 1 | id),
  correlation = nlme::corARMA(form = ~ 1 | id),
  correlation = nlme::corARMA(0.1, form = ~ 1 | id))

perf_functions <-
  fit_curves(formula = formula_list,
    data = FulanusPhysiology,
    fitFUN = mgcv::gamm,
    args_list = correlation_list
  )

}
